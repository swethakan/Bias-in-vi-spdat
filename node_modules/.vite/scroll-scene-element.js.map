{
  "version": 3,
  "sources": ["../scroll-scene-element/src/scroll-scene-element.ts", "dep:scroll-scene-element"],
  "sourcesContent": ["const offsetObservers = new Map<number, IntersectionObserver>();\ntype ProgressCommands = { on: () => void; off: () => void };\nconst progressListeners = new WeakMap<ScrollSceneElement, ProgressCommands>();\n\nlet previousScrollDepth = 0;\nlet isScrollingDown = false;\n\nfunction createOffsetObserver(offset: number) {\n\treturn new IntersectionObserver(\n\t\t(entries) => {\n\t\t\tconst scrollDepth = window.pageYOffset;\n\t\t\tisScrollingDown = scrollDepth > previousScrollDepth;\n\t\t\tpreviousScrollDepth = scrollDepth;\n\n\t\t\tfor (const entry of entries) {\n\t\t\t\tconst element = entry.target as ScrollSceneElement;\n\t\t\t\tconst bounds = entry.boundingClientRect;\n\t\t\t\tconst offset = element.offset;\n\t\t\t\tconst progress = element.progress;\n\t\t\t\tconst isIntersecting = entry.isIntersecting;\n\n\t\t\t\tif (progress) {\n\t\t\t\t\tlet commands = progressListeners.get(element);\n\n\t\t\t\t\tif (!commands) {\n\t\t\t\t\t\tcommands = observeProgress(element);\n\t\t\t\t\t\tprogressListeners.set(element, commands);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isIntersecting) {\n\t\t\t\t\t\tcommands.on();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcommands.off();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\telement.dispatchEvent(\n\t\t\t\t\tnew CustomEvent(`scroll-scene-${isIntersecting ? 'enter' : 'exit'}`, {\n\t\t\t\t\t\tbubbles: true,\n\t\t\t\t\t\tdetail: {\n\t\t\t\t\t\t\tbounds,\n\t\t\t\t\t\t\tisScrollingDown,\n\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\toffset,\n\t\t\t\t\t\t},\n\t\t\t\t\t}),\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\trootMargin: `${-100 * (1 - offset)}% 0px ${-100 * offset}%`,\n\t\t},\n\t);\n}\n\nfunction connectToObserver(element: ScrollSceneElement, offset: number) {\n\tlet observer = offsetObservers.get(offset);\n\n\tif (!observer) {\n\t\tobserver = createOffsetObserver(offset);\n\t\toffsetObservers.set(offset, observer);\n\t}\n\n\tobserver.observe(element);\n}\n\nfunction disconnectFromObserver(element: ScrollSceneElement, offset: number) {\n\tconst observer = offsetObservers.get(offset);\n\n\t// Is there a race-condition scenario where this does not exist? Not sure.\n\tif (observer) {\n\t\tobserver.unobserve(element);\n\t}\n}\n\nfunction observeProgress(element: ScrollSceneElement): ProgressCommands {\n\t/**\n\t * Called on each scroll event.\n\t */\n\tfunction scroll() {\n\t\tconst bounds = element.getBoundingClientRect();\n\t\tconst offset = element.offset;\n\t\tconst top = bounds.top;\n\t\tconst bottom = bounds.bottom;\n\t\t// ensure progress is never less than 0 or greater than 1\n\t\tconst progress = Math.max(\n\t\t\t0,\n\t\t\tMath.min((window.innerHeight * offset - top) / (bottom - top), 1),\n\t\t);\n\n\t\telement.dispatchEvent(\n\t\t\tnew CustomEvent('scroll-scene-progress', {\n\t\t\t\tbubbles: true,\n\t\t\t\tdetail: {\n\t\t\t\t\tbounds,\n\t\t\t\t\telement,\n\t\t\t\t\tprogress,\n\t\t\t\t\toffset,\n\t\t\t\t},\n\t\t\t}),\n\t\t);\n\t}\n\n\treturn {\n\t\ton() {\n\t\t\t// initial hit\n\t\t\tscroll();\n\t\t\twindow.addEventListener('scroll', scroll, false);\n\t\t},\n\t\toff() {\n\t\t\twindow.removeEventListener('scroll', scroll, false);\n\t\t},\n\t};\n}\n\nclass ScrollSceneElement extends HTMLElement {\n\tconnectedCallback() {\n\t\tconnectToObserver(this, this.offset);\n\t}\n\n\tdisconnectedCallback() {\n\t\tdisconnectFromObserver(this, this.offset);\n\t}\n\n\tattributeChangedCallback(attribute: string, previousValue: string) {\n\t\tif (attribute === 'offset') {\n\t\t\tconst previousOffset = Number.parseFloat(previousValue);\n\n\t\t\tif (previousOffset !== this.offset) {\n\t\t\t\tdisconnectFromObserver(this, previousOffset);\n\t\t\t\tconnectToObserver(this, this.offset);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic get observedAttributes() {\n\t\treturn ['offset', 'progress'];\n\t}\n\n\tget offset() {\n\t\treturn Number.parseFloat(this.getAttribute('offset')) || 0.5;\n\t}\n\n\tset offset(value: number) {\n\t\tthis.setAttribute('offset', value.toString());\n\t}\n\n\tget progress() {\n\t\treturn this.hasAttribute('progress');\n\t}\n\n\tset progress(value: boolean) {\n\t\tif (value) {\n\t\t\tthis.setAttribute('progress', '');\n\t\t} else {\n\t\t\tthis.removeAttribute('progress');\n\t\t}\n\t}\n}\n\ndeclare global {\n\tinterface Window {\n\t\tScrollSceneElement: typeof ScrollSceneElement;\n\t}\n}\n\nexport default ScrollSceneElement;\n\nif (!window.customElements.get('scroll-scene')) {\n\twindow.ScrollSceneElement = ScrollSceneElement;\n\twindow.customElements.define('scroll-scene', ScrollSceneElement);\n}\n", "import d from \"./node_modules/scroll-scene-element/dist/scroll-scene-element.js\";export default d;"],
  "mappings": ";AAAA,IAAM,IAAkB,IAAI;AAA5B,IAEM,IAAoB,IAAI;AAE9B,IAAI,IAAsB;AAA1B,IACI,IAAA;AAkDJ,WAA2B,IAA6B,IAAA;AACvD,MAAI,KAAW,EAAgB,IAAI;AAE9B,QACJ,MApDF,SAA8B,IAAA;AAC7B,WAAA,IAAW,qBACT,QAAA;AACA,YAAM,KAAc,OAAO;AAC3B,UAAkB,KAAc,GAChC,IAAsB;AAEtB,iBAAW,MAAS,IAAS;AAC5B,cAAM,KAAU,GAAM,QAChB,KAAS,GAAM,oBACf,KAAS,GAAQ,QAEjB,KAAiB,GAAM;AAE7B,YAHiB,GAAQ,UAGX;AACb,cAAI,KAAW,EAAkB,IAAI;AAEhC,gBACJ,MAAW,EAAgB,KAC3B,EAAkB,IAAI,IAAS,MAG5B,KACH,GAAS,OAET,GAAS;;AAIX,WAAQ,cACP,IAAI,YAA4B,kBAAA,MAAiB,UAAU,SAAU,EACpE,SAAA,MACA,QAAQ,EACP,QAAA,IACA,iBAAA,GACA,SAAA,IACA,QAAA;;OAML,EACC,YAAY,GAAA,OAAW,KAAI,YAAA,OAAuB;IASnB,KAChC,EAAgB,IAAI,IAAQ,MAG7B,GAAS,QAAQ;;AAGlB,WAAgC,IAA6B,IAAA;AAC5D,QAAM,KAAW,EAAgB,IAAI;AAGjC,QACH,GAAS,UAAU;;AAIrB,WAAyB,IAAA;AAIxB,gBAAS;AACR,UAAM,KAAS,GAAQ,yBACjB,KAAS,GAAQ,QACjB,KAAM,GAAO,KAGb,KAAW,KAAK,IACrB,GACA,KAAK,IAAK,QAAO,cAAc,KAAS,MAJ1B,IAAO,SAIoC,KAAM;AAGhE,OAAQ,cACP,IAAI,YAAY,yBAAyB,EACxC,SAAA,MACA,QAAQ,EACP,QAAA,IACA,SAAA,IACA,UAAA,IACA,QAAA;;AAMJ,SAAO,EACN,KAAA;AAEC,UACA,OAAO,iBAAiB,UAAU,IAAA;KAEnC,MAAA;AACC,WAAO,oBAAoB,UAAU,IAAA;;;AAKxC,sBAAiC,YAAA;EAChC,oBAAA;AACC,MAAkB,MAAM,KAAK;;EAG9B,uBAAA;AACC,MAAuB,MAAM,KAAK;;EAGnC,yBAAyB,IAAmB,IAAA;AAC3C,QAAkB,AAAd,OAAc,UAAU;AAC3B,YAAM,KAAiB,OAAO,WAAW;AAErC,aAAmB,KAAK,UAC3B,GAAuB,MAAM,KAC7B,EAAkB,MAAM,KAAK;;;aAKrB,qBAAA;AACV,WAAO,CAAC,UAAU;;MAGf,SAAA;AACH,WAAO,OAAO,WAAW,KAAK,aAAa,cAAc;;MAGtD,OAAO,IAAA;AACV,SAAK,aAAa,UAAU,GAAM;;MAG/B,WAAA;AACH,WAAY,KAAA,aAAa;;MAGtB,SAAS,IAAA;AACR,SACH,KAAK,aAAa,YAAY,MAE9B,KAAK,gBAAgB;;;AAanB,OAAO,eAAe,IAAI,mBAC9B,QAAO,qBAAqB,GAC5B,OAAO,eAAe,OAAO,gBAAgB;;;AC1KmC,IAAO,+BAAQ;",
  "names": []
}
